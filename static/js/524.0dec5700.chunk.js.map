{"version":3,"file":"static/js/524.0dec5700.chunk.js","mappings":"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","sources":["webpack://taskpro/./src/components/Header/Header.module.scss?6eb7","webpack://taskpro/./src/components/Header/SelectTheme/SelectTheme.module.scss?dc9e","components/Header/SelectTheme/OutsideClicker.jsx","components/Header/SelectTheme/SelectTheme.jsx","webpack://taskpro/./src/components/Header/Profile/Profile.module.scss?b4dd","components/Header/Profile/Profile.jsx","webpack://taskpro/./src/components/Header/ProfileModal/ProfileModal.module.scss?9b06","components/Header/ProfileModal/ProfileModal.jsx","services/themes.js","components/Header/Header.jsx","webpack://taskpro/./src/components/LogoComponent/LogoComponent.module.scss?f9d9","components/LogoComponent/LogoComponent.jsx","components/Forms/NewBoardAndEditBoard/NewBoardForm.jsx","webpack://taskpro/./src/components/Forms/NeedHelp/NeedHelp.module.scss?7fbf","components/Forms/NeedHelp/NeedHelp.jsx","webpack://taskpro/./src/components/Sidebar/Sidebar.module.scss?60bc","components/Forms/NewBoardAndEditBoard/EditBoard.jsx","components/Sidebar/Sidebar.jsx","webpack://taskpro/./src/components/Bord/WelcomePageBoard/WelcomePageBoard.module.scss?27ac","components/Bord/WelcomePageBoard/WelcomePageBoard.jsx","webpack://taskpro/./src/pages/HomePage/HomePage.module.scss?bae6","pages/HomePage/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"header\":\"Header_header__OKWO7\",\"container\":\"Header_container__TsUVY\",\"menu\":\"Header_menu__iSxy+\",\"icon\":\"Header_icon__a8FkJ\",\"modalContainer\":\"Header_modalContainer__GF0jM\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SelectTheme_container__r7-AJ\",\"select\":\"SelectTheme_select__8wmg7\",\"selectContainer\":\"SelectTheme_selectContainer__7WLE1\",\"header\":\"SelectTheme_header__ZvlpG\",\"icon\":\"SelectTheme_icon__R1psC\",\"rotate\":\"SelectTheme_rotate__dNDwZ\",\"svg\":\"SelectTheme_svg__Hjzi-\",\"list\":\"SelectTheme_list__DAEHj\",\"active\":\"SelectTheme_active__l-6bo\",\"listItem\":\"SelectTheme_listItem__J0eR1\",\"current\":\"SelectTheme_current__DFjtF\"};","/* eslint-disable no-unused-vars */\nimport React, { useEffect, useRef } from \"react\";\n\nexport function OutsideClicker(props) {\n  const wrapperRef = useRef(null);\n  let { isActive, setActive } = props;\n\n  function useOutsideAlerter(ref) {\n    useEffect(() => {\n      function handleClickOutside(event) {\n        if (ref.current && !ref.current.contains(event.target)) {\n            setActive((isActive = false));\n        }\n      }\n      document.addEventListener('mousedown', handleClickOutside);\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside);\n      };\n    }, [ref]);\n  }\n\n  useOutsideAlerter(wrapperRef);\n\n  return <div ref={wrapperRef}>{props.children}</div>;\n}","import clsx from 'clsx';\nimport css from './SelectTheme.module.scss';\nimport { useState } from \"react\";\nimport './SelectTheme.module.scss';\nimport sprite from '../../../assets/icons/icons.svg';\nimport { OutsideClicker } from './OutsideClicker';\n\nexport const SelectTheme = ({selectHandler, userTheme, setSelectedTheme}) => {\n    const [isActive, setActive] = useState(false);\n    \n    const handleClick = (event) => {\n        const evtParent = event.currentTarget.parentElement;\n        evtParent.children[1].classList.toggle('active');\n        evtParent.children[0].children[1].classList.toggle('rotate');\n        \n        setActive(!isActive);\n    }\n\n    const handleSelect = (event) => {\n        const theme = event.target.innerText.toLowerCase();\n        setSelectedTheme(theme);\n        selectHandler(theme);\n    }\n\n    const themeCheckHandler = () => {\n        return userTheme.length === 0 ? 'dark' : userTheme;\n    }\n\n    return (\n        <OutsideClicker isActive={isActive} setActive={setActive}>\n            <div className={css.container}>   \n                <div className={css.select}>\n                    <div className={css.selectContainer} onClick={handleClick}>\n                        <p className={css.header}>Theme</p>\n                        <div className={clsx(css.icon, [isActive && css.rotate])}>\n                            <svg className={css.svg}>\n                                <use href={sprite + '#icon-arrow-down'}></use>\n                            </svg>\n                        </div>\n                    </div>\n                    \n                    <ul className={clsx(css.list, [isActive && css.active])} \n                        onClick={event => {\n                            handleClick(event);\n                            handleSelect(event);\n                    }}>\n                        <li key={1} className={clsx({\n                            [css.listItem] : true,\n                            [css.current] : isActive && themeCheckHandler() === 'light'\n                        })}>\n                            <p>Light</p>\n                        </li>\n                        <li key={2} className={clsx({\n                            [css.listItem] : true,\n                            [css.current] : isActive && themeCheckHandler() === 'dark'\n                        })}>\n                            <p>Dark</p>\n                        </li>\n                        <li key={3} className={clsx({\n                            [css.listItem] : true,\n                            [css.current] : isActive && themeCheckHandler() === 'violet'\n                        })}>\n                            <p>Violet</p>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </OutsideClicker>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Profile_container__OBYQH\",\"name\":\"Profile_name__9EFSA\",\"avatarContainer\":\"Profile_avatarContainer__VuBqv\",\"svg\":\"Profile_svg__uWmy7\",\"img\":\"Profile_img__WBvF+\"};","import css from './Profile.module.scss';\nimport sprite from '../../../assets/icons/icons.svg';\nimport { useSelector } from 'react-redux';\nimport { selectName } from 'redux/auth/authSelectors';\n\nexport const Profile = ({ modalHandler, avatar, userAvatar }) => {\n    const name = useSelector(selectName);\n\n    const checkAvatar = () => {\n        if (avatar && avatar?.length > 0) {\n            return avatar;\n        }\n        return userAvatar;\n    }\n\n    return (\n        <div className={css.container}>\n            <div className={css.tooltip}>\n                <p></p>\n            </div>\n            <p className={css.name}>{name}</p>\n            <div className={css.avatarContainer} onClick={modalHandler}>\n                {userAvatar?.length === 0 && !avatar ? (\n                    <svg className={css.svg}>\n                        <use href={sprite + '#user-avatar-icon'}></use>\n                    </svg>\n                ) : (\n                    <img className={css.img} src={`${checkAvatar()}`} alt=\"Avatar\" />\n                )}\n            </div>\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"ProfileModal_modal__uUk-c\",\"header\":\"ProfileModal_header__p2Gkw\",\"imageContainer\":\"ProfileModal_imageContainer__TkbH5\",\"svg\":\"ProfileModal_svg__R5DnF\",\"image\":\"ProfileModal_image__riVrJ\",\"addImg\":\"ProfileModal_addImg__7yF92\",\"label\":\"ProfileModal_label__anism\",\"labelSvg\":\"ProfileModal_labelSvg__p6IXF\",\"addFile\":\"ProfileModal_addFile__amgiz\",\"passLabel\":\"ProfileModal_passLabel__ee77g\",\"input\":\"ProfileModal_input__Bkn-5\",\"iconEye\":\"ProfileModal_iconEye__cCPGf\",\"errorMessage\":\"ProfileModal_errorMessage__EFQxM\",\"button\":\"ProfileModal_button__N+D4X\"};","import { useEffect, useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport InputField from 'shared/components/InputField/InputField';\nimport * as yup from 'yup';\nimport css from './ProfileModal.module.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateUser, updateAvatar } from 'redux/auth/authOperations';\nimport sprite from '../../../assets/icons/icons.svg';\nimport clsx from 'clsx';\nimport { selectUser } from 'redux/auth/authSelectors';\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .min(2, 'Username must be at least 2 characters')\n    .max(64, 'Username must be less than or equal to 64 characters')\n    .required('Username is a required field'),\n  email: yup\n    .string()\n    .email('Email must be a valid email')\n    .min(3, 'Email must be at least 3 characters')\n    .max(64, 'Email must be less than or equal to 64 characters')\n    .required('Email is a required field'),\n  password: yup\n    .string()\n    .min(8, 'Password must be at least 8 characters')\n    .max(64, 'Password must be less than or equal to 64 characters')\n    .required('Password is a required field'),\n});\n\nexport const ProfileModal = ({ modalHandler, avatar, userAvatar }) => {\n  const [image, setImage] = useState(null);\n  const [showPass, setShowPass] = useState('password');\n  const dispatch = useDispatch();\n  const userObj = useSelector(selectUser);\n\n  const InitalVelues = {\n    name: userObj.name,\n    email: userObj.email,\n    password: '',\n  };\n\n  useEffect(() => {\n    if (image) {\n      const formData = new FormData();\n      formData.append('avatar', image);\n\n      if(image.size > 1040000) return alert('Maximum image size is 1MB');\n\n      dispatch(updateAvatar(formData));\n      setImage(null);\n    }\n  }, [image, dispatch]);\n\n  const submitHandler = (values, { resetForm }) => {\n    dispatch(\n      updateUser({\n        name: values.name,\n        email: values.email,\n        password: values.password,\n      })\n    );\n\n    resetForm();\n    modalHandler();\n  };\n\n  const handleFileSelect = evt => {\n    setImage(evt.target.files[0]);\n  };\n\n  const checkAvatar = () => {\n    if (avatar && avatar.length > 0) {\n        return avatar;\n    }\n    return userAvatar;\n  }\n\n  return (\n    <div className={css.modal}>\n      <div className={css.imageContainer}>\n        {userAvatar.length === 0 && !avatar ? (\n          <svg className={css.svg}>\n            <use href={sprite + '#user-avatar-icon'}></use>\n          </svg>\n        ) : (\n          <div className={css.image}>\n            <img className={css.img} src={checkAvatar()} alt=\"Avatar\" />\n          </div>\n        )}\n        <div className={css.addImg}>\n          <label className={css.label} htmlFor=\"inputAddFile\">\n            <svg className={css.labelSvg}>\n                <use href={sprite + \"#icon-btn-plus\"}></use>\n            </svg>\n          </label>\n          <input\n            className={css.addFile}\n            id=\"inputAddFile\"\n            type=\"file\"\n            accept=\"image/png, image/jpeg\"\n            placeholder=\"\"\n            onChange={handleFileSelect}\n          />\n        </div>\n      </div>\n\n      <Formik\n        initialValues={InitalVelues}\n        validationSchema={schema}\n        onSubmit={submitHandler}\n      >\n        <Form>\n          <InputField name=\"name\" placeholder=\"Enter name\" />\n          <InputField name=\"email\" placeholder=\"Enter email\" value=\"hello\" />\n          <label htmlFor=\"updatePassInput\" className={css.passLabel}>\n          {showPass === 'password' ? (\n                <svg className={css.iconEye} onClick={() => setShowPass('text')}>\n                    <use href={sprite + \"#icon-eye-blocked\"}></use>\n                </svg>\n            ) : (\n                <svg className={clsx({\n                    [css.iconEye] : true,\n                    [css.iconEyeOpen] : showPass === 'text'\n                })} onClick={() => setShowPass('password')}>\n                    <use href={sprite + \"#icon-eye\"}></use>\n                </svg>\n            )}\n            <Field \n                id='updatePassInput'\n                name=\"password\" \n                placeholder=\"Enter password\" \n                type={showPass} \n                className={css.input}\n            />\n            \n            <ErrorMessage name=\"password\" component=\"span\" className={css.errorMessage} />\n          </label>\n          <button className={css.button} type=\"submit\">\n            Send\n          </button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","export let themes = {\n    dark: {\n        primaryBackground: '#121212',\n        secondaryBackground: '#1F1F1F',\n        headerBackground: '#161616',\n        primaryTextColor: '#FFFFFF',\n        secondaryTextColor: 'rgba(255, 255, 255, 0.5)',\n        boardHeaders: '#FFFFFF',\n        btnBg: '#BEDBB0',\n        btnTextColor: '#121212',\n        selectHeader: 'rgba(255, 255, 255, 0.8)',\n        selectOption: 'rgba(255, 255, 255, 0.5)',\n        selectListBg: '#151515',\n        selectListBorder: '#BEDBB0',\n        modalBackground: '#151515',\n        btnModalIconPlus: '#FFFFFF',\n        btnModalBg: \"#161616\",\n        btnModalTextColor: \"#161616\",\n        cardBg: \"#121212\",\n        boardAddColumnBtn: \"#FFFFFF\",\n        boardAddColumnPlus: \"#121212\",\n        headerModalBtnAddFile: \"#BEDBB0\",\n        sidebarBoardActiveBg: \"#1F1F1F\",\n        sidebarHelpWrapperBg: \"#1F1F1F\",\n        sidebarButtonCreateBg: \"#BEDBB0\",\n        sidebarButtonIconPlus: \"#121212\",\n        sidebarBoardItemHover: \"#404040\",\n        sidebarTextColorMain: \"#FFF\",\n        btnHoverMain:\"#a8cf96\",\n        btnActiveMain: \"#8bbf73\",\n        btnHoverSecondary: \"#595959\",\n        btnActiveSecondary: \"#333333\",\n        sidebarTextColorSecondary: \"rgba(255, 255, 255, 0.50)\",\n        priorityWithoutPriority: \"rgba(255, 255, 255, 0.3)\",\n        scrollHandler: \"rgba(255, 255, 255, 0.10)\",\n        scrollTrack: \"#161616\",\n    },\n    light: {\n        primaryBackground: '#FFFFFF',\n        secondaryBackground: '#F6F6F7',\n        headerBackground: '#FCFCFC',\n        primaryTextColor: '#161616',\n        secondaryTextColor: 'rgba(22, 22, 22, 0.5)',\n        boardHeaders: '#161616B2',\n        btnBg: '#BEDBB0',\n        btnTextColor: '#161616',\n        selectHeader: 'rgba(160, 160, 160, 0.8)',\n        selectOption: '#161616',\n        selectListBg: '#FCFCFC',\n        selectListBorder: '#BEDBB0',\n        modalBackground: '#FCFCFC',\n        btnModalIconPlus: '#FFFFFF',\n        btnModalBg: \"#161616\",\n        cardBg: \"#FFFFFF\",\n        boardAddColumnBtn: \"#121212\",\n        boardAddColumnPlus: \"#FFFFFF\",\n        headerModalBtnAddFile: \"#BEDBB0\",\n        sidebarBoardActiveBg: \"#F6F6F7\",\n        sidebarHelpWrapperBg: \"#F6F6F7\",\n        sidebarButtonCreateBg: \"#BEDBB0\",\n        sidebarButtonIconPlus: \"#121212\",\n        sidebarBoardItemHover: \"#e4e4e7\",\n        sidebarTextColorMain: \"#161616\",\n        sidebarTextColorSecondary: \"rgba(22, 22, 22, 0.50)\",\n        btnHoverMain: \"#a8cf96\",\n        btnActiveMain: \"#8bbf73\",\n        btnHoverSecondary: \"#404040\",\n        btnActiveSecondary: \"#737373\",\n        priorityWithoutPriority: \"rgba(22, 22, 22, 0.30)\",\n        scrollHandler: \"rgba(22, 22, 22, 0.30)\",\n        scrollTrack: \"rgba(22, 22, 22, 0.20)\",\n    },\n    violet: {\n        primaryBackground: '#5255BC',\n        secondaryBackground: '#ECEDFD',\n        headerBackground: '#FFFFFF',\n        primaryTextColor: '#161616',\n        secondaryTextColor: 'rgba(22, 22, 22, 0.5)',\n        boardHeaders: '#161616',\n        btnBg: '#5255BC',\n        btnTextColor: '#FFFFFF',\n        selectHeader: 'rgba(160, 160, 160, 0.8)',\n        selectOption: '#161616',\n        selectListBg: '#FCFCFC',\n        selectListBorder: '#ECEDFD',\n        modalBackground: '#FCFCFC',\n        btnModalIconPlus: '#161616',\n        btnModalBg: \"#FFFFFF\",\n        cardBg: \"#FFFFFF\",\n        boardAddColumnBtn: \"#5255BC\",\n        boardAddColumnPlus: \"#FFFFFF\",\n        headerModalBtnAddFile: \"#ECEDFD\",\n        sidebarBoardActiveBg: \"rgba(255, 255, 255, 0.21)\",\n        sidebarHelpWrapperBg: \"rgba(236, 237, 253, 0.40)\",\n        sidebarButtonCreateBg: \"#B8BCFD\",\n        sidebarButtonIconPlus: \"#FFFFFF\",\n        sidebarBoardItemHover: \"rgba(217, 217, 217, 0.5)\",\n        sidebarTextColorMain: \"#FFF\",\n        sidebarTextColorSecondary: \"rgba(255, 255, 255, 0.50)\",\n        btnHoverMain: \"#6c6fc6\",\n        btnActiveMain: \"#4044a5\",\n        btnHoverSecondary: \"#6c6fc6\",\n        btnActiveSecondary: \"#4044a5\",\n        priorityWithoutPriority: \"rgba(22, 22, 22, 0.30)\",\n        scrollHandler: \"#B8BCFD\",\n        scrollTrack: \"#FFFFFF\",\n    }\n}\n// --btn-hover-main: #a8cf96;\n// --btn-active-main: #8bbf73;\nexport const selectHandler = (theme) => {\n    const root = document.querySelector(':root');\n\n    root.style.setProperty('--primary-background', themes[theme].primaryBackground);\n    root.style.setProperty('--secondary-background', themes[theme].secondaryBackground );\n    root.style.setProperty('--header-background', themes[theme].headerBackground);\n    root.style.setProperty('--primary-text-color', themes[theme].primaryTextColor);\n    root.style.setProperty('--secondary-text-color', themes[theme].secondaryTextColor);\n    root.style.setProperty('--board-headers', themes[theme].boardHeaders);\n    root.style.setProperty('--btn-bg', themes[theme].btnBg);\n    root.style.setProperty('--btn-text-color', themes[theme].btnTextColor);\n    root.style.setProperty('--select-header', themes[theme].selectHeader);\n    root.style.setProperty('--select-option', themes[theme].selectOption);\n    root.style.setProperty('--select-list-bg', themes[theme].selectListBg);\n    root.style.setProperty('--select-list-border', themes[theme].selectListBorder);\n    root.style.setProperty('--modal-background', themes[theme].modalBackground);\n    root.style.setProperty('--btn-modal-icon-plus', themes[theme].btnModalIconPlus);\n    root.style.setProperty('--btn-modal-bg', themes[theme].btnModalBg);\n    root.style.setProperty('--btn-modal-text-color', themes[theme].btnModalTextColor);\n    root.style.setProperty('--card-bg', themes[theme].cardBg);\n    root.style.setProperty('--board-add-column-btn', themes[theme].boardAddColumnBtn);\n    root.style.setProperty('--board-add-column-plus', themes[theme].boardAddColumnPlus);\n    root.style.setProperty('--header-modal-btn-add-file', themes[theme].headerModalBtnAddFile);\n    root.style.setProperty('--sidebar-board-active-bg', themes[theme].sidebarBoardActiveBg);\n    root.style.setProperty('--sidebar-help-wrapper-bg', themes[theme].sidebarHelpWrapperBg);\n    root.style.setProperty('--sidebar-button-create-bg', themes[theme].sidebarButtonCreateBg);\n    root.style.setProperty('--sidebar-button-icon-plus', themes[theme].sidebarButtonIconPlus);\n    root.style.setProperty('--sidebar-board-item-hover', themes[theme].sidebarBoardItemHover);\n    root.style.setProperty('--sidebar-text-color-main', themes[theme].sidebarTextColorMain);\n    root.style.setProperty('--sidebar-text-color-secondary', themes[theme].sidebarTextColorSecondary);\n    root.style.setProperty('--btn-hover-main', themes[theme].btnHoverMain);\n    root.style.setProperty('--btn-active-main', themes[theme].btnActiveMain);\n    root.style.setProperty('--btn-hover-secondary', themes[theme].btnHoverSecondary);\n    root.style.setProperty('--btn-active-secondary', themes[theme].btnActiveSecondary);\n    root.style.setProperty('--priority-without-priority', themes[theme].priorityWithoutPriority);\n    root.style.setProperty('--scroll-handler', themes[theme].scrollHandler);\n    root.style.setProperty('--scroll-track', themes[theme].scrollTrack);\n}","import css from './Header.module.scss';\nimport { SelectTheme } from './SelectTheme/SelectTheme';\nimport { Profile } from './Profile/Profile';\nimport { ProfileModal } from './ProfileModal/ProfileModal';\n\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  selectUserTheme,\n  selectAvatar,\n  selectUserAvatar,\n} from 'redux/auth/authSelectors';\nimport Modal from 'components/Modal/Modal';\nimport { useDispatch } from 'react-redux';\nimport { switchTheme } from 'redux/auth/authOperations';\nimport { toggleSidebar } from 'redux/board/boardOperations';\n\nimport sprite from '../../assets/icons/icons.svg';\nimport { selectHandler } from '../../services/themes';\n\nexport const Header = () => {\n  const userTheme = useSelector(selectUserTheme);\n  const userAvatar = useSelector(selectUserAvatar);\n  const avatar = useSelector(selectAvatar);\n  const [selectedTheme, setSelectedTheme] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (userTheme) selectHandler(userTheme);\n  }, [userTheme]);\n\n  useEffect(() => {\n    if (selectedTheme) {\n      selectHandler(selectedTheme);\n      dispatch(switchTheme(selectedTheme));\n    }\n    return;\n  }, [selectedTheme, dispatch]);\n\n  const modalHandler = () => setIsModalOpen(!isModalOpen);\n\n  return (\n    <header className={css.header}>\n      <div className={css.menu} onClick={() => dispatch(toggleSidebar(true))}>\n        <svg className={css.icon}>\n          <use href={sprite + '#icon-burger-menu'}></use>\n        </svg>\n      </div>\n      <div className={css.container}>\n        <SelectTheme\n          selectHandler={selectHandler}\n          userTheme={userTheme}\n          selectedTheme={selectedTheme}\n          setSelectedTheme={setSelectedTheme}\n        ></SelectTheme>\n        <Profile\n          modalHandler={modalHandler}\n          avatar={avatar}\n          userAvatar={userAvatar}\n        ></Profile>\n      </div>\n      {isModalOpen && (\n        <Modal title={'Edit profile'} closeModal={modalHandler}>\n          <ProfileModal\n            modalHandler={modalHandler}\n            avatar={avatar}\n            userAvatar={userAvatar}\n          ></ProfileModal>\n        </Modal>\n      )}\n    </header>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"iconBg\":\"LogoComponent_iconBg__upuL2\",\"violet\":\"LogoComponent_violet__-Nw79\",\"icon\":\"LogoComponent_icon__K3ESn\"};","import Icon from 'components/Icon/Icon';\nimport st from './LogoComponent.module.scss';\nimport clsx from 'clsx';\nimport { useSelector } from 'react-redux';\nimport { selectUserTheme } from 'redux/auth/authSelectors';\n\nexport const LogoComponent = () => {\n  const theme = useSelector(selectUserTheme)\n  return (\n    <div className={clsx(st.iconBg, theme === \"violet\" && st.violet)}>\n      <Icon name={'icon-iconlogo'} width={32} height={32} secondaryClassName={clsx(st.icon, theme === \"violet\" && st.violet)}/>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport clsx from 'clsx';\nimport Box from '@mui/joy/Box';\nimport Radio from '@mui/joy/Radio';\nimport RadioGroup from '@mui/joy/RadioGroup';\nimport InputField from 'shared/components/InputField/InputField';\nimport Icon from '../../Icon/Icon';\nimport ButtonModalWithIcon from 'components/Modal/ButtonModalWithIcon';\nimport BgIcon from './BgIcon';\nimport s from './NewBoard.module.scss';\n\nimport defaultBg from '../../../static/images/bgIcons/defaultBg.png';\nimport flowers from '../../../static/images/bgIcons/flowers.png';\nimport leaves from '../../../static/images/bgIcons/leaves.png';\nimport mountainsAndBalloon from '../../../static/images/bgIcons/mountainsAndBalloon.png';\nimport nature from '../../../static/images/bgIcons/nature.png';\nimport oceanAndYacht from '../../../static/images/bgIcons/oceanAndYacht.png';\nimport orangePlanet from '../../../static/images/bgIcons/orangePlanet.png';\nimport planets from '../../../static/images/bgIcons/planets.png';\nimport rocksAndOcean from '../../../static/images/bgIcons/rocksAndOcean.png';\nimport sakura from '../../../static/images/bgIcons/sakura.png';\nimport sky from '../../../static/images/bgIcons/sky.png';\nimport skyBalloons from '../../../static/images/bgIcons/skyBalloons.png';\nimport starsAndShine from '../../../static/images/bgIcons/starsAndShine.png';\nimport trailerInTheCanyon from '../../../static/images/bgIcons/trailerInTheCanyon.png';\nimport yacht from '../../../static/images/bgIcons/yacht.png';\nimport youngMonth from '../../../static/images/bgIcons/youngMonth.png';\nimport { createNewBoard } from 'redux/board/boardOperations';\nimport { selectUserTheme } from 'redux/auth/authSelectors';\nimport defaultBgWhite from '../../../static/images/bgIcons/defaultBgWhite.png';\nconst initialsValue = {\n  title: '',\n};\n\nconst schema = yup.object().shape({\n  title: yup.string().required('Title is a required field'),\n});\n\nconst NewBoard = ({ closeModal }) => {\n  const [icon, setIcon] = useState('project');\n  const [bg, setBg] = useState('defaultBg');\n  const theme = useSelector(selectUserTheme);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(\n      createNewBoard({ title: values.title, icon: icon, background: bg })\n    );\n    closeModal();\n    resetForm();\n  };\n\n  return (\n    <Formik\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n      initialValues={initialsValue}\n    >\n      <Form>\n        <InputField name=\"title\" placeholder=\"Title\" />\n        <div>\n          <p className={s.title}>Icons</p>\n          <RadioGroup\n            orientation=\"horizontal\"\n            aria-label=\"Icons\"\n            name=\"icons\"\n            variant=\"outlined\"\n            value={icon}\n            onChange={event => setIcon(event.target.value)}\n            sx={{\n              marginBottom: '24px',\n              border: 'none',\n              gap: '8px',\n            }}\n          >\n            {[\n              'project',\n              'star',\n              'loading',\n              'puzzle',\n              'container',\n              'lightnight',\n              'colors',\n              'hexagon',\n            ].map(item => (\n              <Box\n                key={item}\n                sx={{\n                  position: 'relative',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                }}\n              >\n                <Radio\n                  value={item}\n                  disableIcon\n                  overlay\n                  name=\"icons\"\n                  label={\n                    {\n                      colors: (\n                        <Icon\n                          name={theme === 'dark' ? 'colors' : 'colors-white'}\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'colors' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      hexagon: (\n                        <Icon\n                          name={theme === 'dark' ? 'hexagon' : 'hexagon-white'}\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'hexagon' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      project: (\n                        <Icon\n                          name={theme === 'dark' ? 'project' : 'project-white'}\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'project' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      container: (\n                        <Icon\n                          name={\n                            theme === 'dark' ? 'container' : 'container-white'\n                          }\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'container' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      lightnight: (\n                        <Icon\n                          name={\n                            theme === 'dark' ? 'lightnight' : 'lightnight-white'\n                          }\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'lightnight' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      loading: (\n                        <Icon\n                          name={theme === 'dark' ? 'loading' : 'loading-white'}\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'loading' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      puzzle: (\n                        <Icon\n                          name={theme === 'dark' ? 'puzzle' : 'puzzle-white'}\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'puzzle' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      star: (\n                        <Icon\n                          name={theme === 'dark' ? 'star' : 'star-white'}\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'star' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                    }[item]\n                  }\n                  variant={icon === item ? 'solid' : 'plain'}\n                  sx={{\n                    '& .Joy-checked': {\n                      backgroundColor: 'transparent',\n                    },\n                    '& .MuiRadio-label': {\n                      width: '18px',\n                      height: '18px',\n                    },\n                  }}\n                  slotProps={{\n                    input: { 'aria-label': item },\n                    action: {\n                      sx: {\n                        '&:hover': {\n                          backgroundColor: 'transparent',\n                        },\n                        borderRadius: 0,\n                        transition: 'none',\n                      },\n                    },\n                    label: { sx: { lineHeight: 0 } },\n                  }}\n                />\n              </Box>\n            ))}\n          </RadioGroup>\n        </div>\n        <div>\n          <p className={s.title}>Background</p>\n          <RadioGroup\n            orientation=\"horizontal\"\n            aria-label=\"Backgrounds\"\n            name=\"background\"\n            variant=\"outlined\"\n            value={bg}\n            onChange={event => setBg(event.target.value)}\n            sx={{\n              flexWrap: 'wrap',\n              width: '260px',\n              marginBottom: '24px',\n              border: 'none',\n              gap: '4px',\n            }}\n          >\n            {[\n              'defaultBg',\n              'flowers',\n              'leaves',\n              'mountainsAndBalloon',\n              'nature',\n              'oceanAndYacht',\n              'orangePlanet',\n              'planets',\n              'rocksAndOcean',\n              'sakura',\n              'sky',\n              'skyBalloons',\n              'starsAndShine',\n              'trailerInTheCanyon',\n              'yacht',\n              'youngMonth',\n            ].map(item => (\n              <Box\n                key={item}\n                sx={{\n                  position: 'relative',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                }}\n              >\n                <Radio\n                  value={item}\n                  disableIcon\n                  overlay\n                  name=\"background\"\n                  label={\n                    {\n                      defaultBg:\n                        theme === 'dark' ? (\n                          <BgIcon name={defaultBg} alt={defaultBg} />\n                        ) : (\n                          <BgIcon name={defaultBgWhite} alt=\"icon\" />\n                        ),\n                      flowers: <BgIcon name={flowers} alt=\"icon\" />,\n                      leaves: <BgIcon name={leaves} alt=\"icon\" />,\n                      mountainsAndBalloon: (\n                        <BgIcon name={mountainsAndBalloon} alt=\"icon\" />\n                      ),\n                      nature: <BgIcon name={nature} alt=\"icon\" />,\n                      oceanAndYacht: <BgIcon name={oceanAndYacht} alt=\"icon\" />,\n                      orangePlanet: <BgIcon name={orangePlanet} alt=\"icon\" />,\n                      planets: <BgIcon name={planets} alt=\"icon\" />,\n\n                      rocksAndOcean: <BgIcon name={rocksAndOcean} alt=\"icon\" />,\n                      sakura: <BgIcon name={sakura} alt=\"icon\" />,\n                      sky: <BgIcon name={sky} alt=\"icon\" />,\n                      skyBalloons: <BgIcon name={skyBalloons} alt=\"icon\" />,\n                      starsAndShine: <BgIcon name={starsAndShine} alt=\"icon\" />,\n                      trailerInTheCanyon: (\n                        <BgIcon name={trailerInTheCanyon} alt=\"icon\" />\n                      ),\n                      yacht: <BgIcon name={yacht} alt=\"icon\" />,\n                      youngMonth: <BgIcon name={youngMonth} alt=\"icon\" />,\n                    }[item]\n                  }\n                  variant={bg === item ? 'solid' : 'plain'}\n                  sx={\n                    theme === 'violet'\n                      ? {\n                          '& .Joy-checked': {\n                            backgroundColor: 'transparent',\n                            outline: '2px solid #5255BC',\n                            borderRadius: '6px',\n                            zIndex: '99',\n                          },\n                        }\n                      : {\n                          '& .Joy-checked': {\n                            backgroundColor: 'transparent',\n                            outline: '2px solid #BEDBB0',\n                            borderRadius: '6px',\n                            zIndex: '99',\n                          },\n                        }\n                  }\n                  slotProps={{\n                    input: { 'aria-label': item },\n                    action: {\n                      sx: {\n                        '&:hover': {\n                          backgroundColor: 'transparent',\n                        },\n                        borderRadius: 0,\n                        transition: 'none',\n                      },\n                    },\n                    label: { sx: { lineHeight: 0 } },\n                  }}\n                />\n              </Box>\n            ))}\n          </RadioGroup>\n        </div>\n\n        <ButtonModalWithIcon text=\"Create\" />\n      </Form>\n    </Formik>\n  );\n};\n\nexport default NewBoard;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"NeedHelp_title__84d0P\",\"label\":\"NeedHelp_label__3X2O7\",\"textarea\":\"NeedHelp_textarea__+QoR6\",\"errorMessage\":\"NeedHelp_errorMessage__YwA2C\",\"button\":\"NeedHelp_button__lgwfC\"};","/* eslint-disable no-unused-vars */\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport InputField from 'shared/components/InputField/InputField';\nimport s from './NeedHelp.module.scss';\nconst schema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Email must be a valid email')\n    .min(3, 'Email must be at least 3 characters')\n    .max(64, 'Email must be less than or equal to 64 characters')\n    .required('Email is a required field'),\n  comment: yup.string().trim().required('Comment is a required field'),\n});\nconst initialValues = {\n  email: '',\n  comment: '',\n};\nconst NeedHelp = ({ closeModal }) => {\n  const hendleSubmit = (values, { resetForm }) => {\n    const obj = {\n      email: values.email,\n      comment: values.comment,\n    };\n    closeModal();\n    resetForm();\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={hendleSubmit}\n    >\n      <Form autoComplete=\"off\">\n        <InputField name=\"email\" placeholder=\"Email address\" />\n        <label className={s.label}>\n          <Field\n            as=\"textarea\"\n            name=\"comment\"\n            placeholder=\"Comment\"\n            className={s.textarea}\n          />\n          <ErrorMessage\n            name=\"comment\"\n            component=\"span\"\n            className={s.errorMessage}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Send\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default NeedHelp;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Sidebar_container__tRE6e\",\"sectionTop\":\"Sidebar_sectionTop__kXrut\",\"logoWrap\":\"Sidebar_logoWrap__fIZIy\",\"logoText\":\"Sidebar_logoText__j+pLJ\",\"boardsTitle\":\"Sidebar_boardsTitle__EnqDF\",\"createBoard\":\"Sidebar_createBoard__Vww8s\",\"buttonCreate\":\"Sidebar_buttonCreate__5kUMF\",\"sectionBoards\":\"Sidebar_sectionBoards__iwH2u\",\"boardsList\":\"Sidebar_boardsList__n6qaq\",\"boardItem\":\"Sidebar_boardItem__-Gzo2\",\"boardItemActive\":\"Sidebar_boardItemActive__MHmWx Sidebar_boardItem__-Gzo2\",\"boardName\":\"Sidebar_boardName__o2iew\",\"boardEditIcons\":\"Sidebar_boardEditIcons__6bzF5\",\"helpWrapper\":\"Sidebar_helpWrapper__bCJj5\",\"helpSend\":\"Sidebar_helpSend__ZNI1k\",\"helpText\":\"Sidebar_helpText__YwZd4\",\"violet\":\"Sidebar_violet__8qKJx\",\"btnLogout\":\"Sidebar_btnLogout__FPSmN\",\"icons\":\"Sidebar_icons__AoxeN\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport clsx from 'clsx';\nimport Box from '@mui/joy/Box';\nimport Radio from '@mui/joy/Radio';\nimport RadioGroup from '@mui/joy/RadioGroup';\nimport InputField from 'shared/components/InputField/InputField';\nimport Icon from '../../Icon/Icon';\nimport ButtonModalWithIcon from 'components/Modal/ButtonModalWithIcon';\nimport BgIcon from './BgIcon';\nimport { updateBoardById } from 'redux/board/boardOperations';\nimport { selectCurrentBoardId } from 'redux/board/boardSelectors';\nimport { selectUserTheme } from 'redux/auth/authSelectors';\nimport s from './NewBoard.module.scss';\n\nimport defaultBg from '../../../static/images/bgIcons/defaultBg.png';\nimport flowers from '../../../static/images/bgIcons/flowers.png';\nimport leaves from '../../../static/images/bgIcons/leaves.png';\nimport mountainsAndBalloon from '../../../static/images/bgIcons/mountainsAndBalloon.png';\nimport nature from '../../../static/images/bgIcons/nature.png';\nimport oceanAndYacht from '../../../static/images/bgIcons/oceanAndYacht.png';\nimport orangePlanet from '../../../static/images/bgIcons/orangePlanet.png';\nimport planets from '../../../static/images/bgIcons/planets.png';\nimport rocksAndOcean from '../../../static/images/bgIcons/rocksAndOcean.png';\nimport sakura from '../../../static/images/bgIcons/sakura.png';\nimport sky from '../../../static/images/bgIcons/sky.png';\nimport skyBalloons from '../../../static/images/bgIcons/skyBalloons.png';\nimport starsAndShine from '../../../static/images/bgIcons/starsAndShine.png';\nimport trailerInTheCanyon from '../../../static/images/bgIcons/trailerInTheCanyon.png';\nimport yacht from '../../../static/images/bgIcons/yacht.png';\nimport youngMonth from '../../../static/images/bgIcons/youngMonth.png';\nimport defaultBgWhite from '../../../static/images/bgIcons/defaultBgWhite.png';\n\nconst schema = yup.object().shape({\n  title: yup.string().required('Title is a required field'),\n});\n\nconst EditBoard = ({ closeModal, boardToEdit }) => {\n  const [icon, setIcon] = useState(boardToEdit[0].icon);\n  const [bg, setBg] = useState(boardToEdit[0].background);\n  const currentBoardId = useSelector(selectCurrentBoardId);\n  const theme = useSelector(selectUserTheme);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(\n      updateBoardById({\n        id: currentBoardId,\n        data: {\n          title: values.title,\n          icon: icon,\n          background: bg,\n        },\n      })\n    );\n    closeModal();\n    resetForm();\n  };\n\n  return (\n    <Formik\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n      initialValues={{ title: boardToEdit[0].title }}\n    >\n      <Form>\n        <InputField\n          name=\"title\"\n          placeholder=\"Title\"\n          value={boardToEdit[0].title}\n        />\n        <div>\n          <p className={s.title}>Icons</p>\n          <RadioGroup\n            orientation=\"horizontal\"\n            aria-label=\"Icons\"\n            name=\"icons\"\n            variant=\"outlined\"\n            value={icon}\n            onChange={event => setIcon(event.target.value)}\n            sx={{\n              marginBottom: '24px',\n              border: 'none',\n              gap: '8px',\n            }}\n          >\n            {[\n              'project',\n              'star',\n              'loading',\n              'puzzle',\n              'container',\n              'lightnight',\n              'colors',\n              'hexagon',\n            ].map(item => (\n              <Box\n                key={item}\n                sx={{\n                  position: 'relative',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                }}\n              >\n                <Radio\n                  value={item}\n                  disableIcon\n                  overlay\n                  name=\"icons\"\n                  label={\n                    {\n                      project: (\n                        <Icon\n                          name={theme === 'dark' ? 'project' : 'project-white'}\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'project' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      colors: (\n                        <Icon\n                          name={theme === 'dark' ? 'colors' : 'colors-white'}\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'colors' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      hexagon: (\n                        <Icon\n                          name={theme === 'dark' ? 'hexagon' : 'hexagon-white'}\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'hexagon' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      container: (\n                        <Icon\n                          name={\n                            theme === 'dark' ? 'container' : 'container-white'\n                          }\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'container' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      lightnight: (\n                        <Icon\n                          name={\n                            theme === 'dark' ? 'lightnight' : 'lightnight-white'\n                          }\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'lightnight' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      loading: (\n                        <Icon\n                          name={theme === 'dark' ? 'loading' : 'loading-white'}\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'loading' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      puzzle: (\n                        <Icon\n                          name={theme === 'dark' ? 'puzzle' : 'puzzle-white'}\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'puzzle' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                      star: (\n                        <Icon\n                          name={theme === 'dark' ? 'star' : 'star-white'}\n                          width={18}\n                          height={18}\n                          secondaryClassName={clsx(\n                            s.svgIcon,\n                            icon === 'star' && s.activeSvgIcon\n                          )}\n                        />\n                      ),\n                    }[item]\n                  }\n                  variant={icon === item ? 'solid' : 'plain'}\n                  sx={{\n                    '& .Joy-checked': {\n                      backgroundColor: 'transparent',\n                    },\n                    '& .MuiRadio-label': {\n                      width: '18px',\n                      height: '18px',\n                    },\n                  }}\n                  slotProps={{\n                    input: { 'aria-label': item },\n                    action: {\n                      sx: {\n                        '&:hover': {\n                          backgroundColor: 'transparent',\n                        },\n                        borderRadius: 0,\n                        transition: 'none',\n                      },\n                    },\n                    label: { sx: { lineHeight: 0 } },\n                  }}\n                />\n              </Box>\n            ))}\n          </RadioGroup>\n        </div>\n        <div>\n          <p className={s.title}>Background</p>\n          <RadioGroup\n            orientation=\"horizontal\"\n            aria-label=\"Backgrounds\"\n            name=\"background\"\n            variant=\"outlined\"\n            value={bg}\n            onChange={event => setBg(event.target.value)}\n            sx={{\n              flexWrap: 'wrap',\n              width: '260px',\n              marginBottom: '24px',\n              border: 'none',\n              gap: '4px',\n            }}\n          >\n            {[\n              'defaultBg',\n              'flowers',\n              'leaves',\n              'mountainsAndBalloon',\n              'nature',\n              'oceanAndYacht',\n              'orangePlanet',\n              'planets',\n              'rocksAndOcean',\n              'sakura',\n              'sky',\n              'skyBalloons',\n              'starsAndShine',\n              'trailerInTheCanyon',\n              'yacht',\n              'youngMonth',\n            ].map(item => (\n              <Box\n                key={item}\n                sx={{\n                  position: 'relative',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                }}\n              >\n                <Radio\n                  value={item}\n                  disableIcon\n                  overlay\n                  name=\"background\"\n                  label={\n                    {\n                      defaultBg:\n                        theme === 'dark' ? (\n                          <BgIcon name={defaultBg} alt={defaultBg} />\n                        ) : (\n                          <BgIcon name={defaultBgWhite} alt=\"icon\" />\n                        ),\n                      flowers: <BgIcon name={flowers} alt={flowers} />,\n                      leaves: <BgIcon name={leaves} alt={leaves} />,\n                      mountainsAndBalloon: (\n                        <BgIcon\n                          name={mountainsAndBalloon}\n                          alt={mountainsAndBalloon}\n                        />\n                      ),\n                      nature: <BgIcon name={nature} alt={nature} />,\n                      oceanAndYacht: (\n                        <BgIcon name={oceanAndYacht} alt={oceanAndYacht} />\n                      ),\n                      orangePlanet: (\n                        <BgIcon name={orangePlanet} alt={orangePlanet} />\n                      ),\n                      planets: <BgIcon name={planets} alt={planets} />,\n\n                      rocksAndOcean: (\n                        <BgIcon name={rocksAndOcean} alt={rocksAndOcean} />\n                      ),\n                      sakura: <BgIcon name={sakura} alt={sakura} />,\n                      sky: <BgIcon name={sky} alt={sky} />,\n                      skyBalloons: (\n                        <BgIcon name={skyBalloons} alt={skyBalloons} />\n                      ),\n                      starsAndShine: (\n                        <BgIcon name={starsAndShine} alt={starsAndShine} />\n                      ),\n                      trailerInTheCanyon: (\n                        <BgIcon\n                          name={trailerInTheCanyon}\n                          alt={trailerInTheCanyon}\n                        />\n                      ),\n                      yacht: <BgIcon name={yacht} alt={yacht} />,\n                      youngMonth: <BgIcon name={youngMonth} alt={youngMonth} />,\n                    }[item]\n                  }\n                  variant={bg === item ? 'solid' : 'plain'}\n                  sx={\n                    theme === 'violet'\n                      ? {\n                          '& .Joy-checked': {\n                            backgroundColor: 'transparent',\n                            outline: '2px solid #5255BC',\n                            borderRadius: '6px',\n                            zIndex: '99',\n                          },\n                        }\n                      : {\n                          '& .Joy-checked': {\n                            backgroundColor: 'transparent',\n                            outline: '2px solid #BEDBB0',\n                            borderRadius: '6px',\n                            zIndex: '99',\n                          },\n                        }\n                  }\n                  slotProps={{\n                    input: { 'aria-label': item },\n                    action: {\n                      sx: {\n                        '&:hover': {\n                          backgroundColor: 'transparent',\n                        },\n                        borderRadius: 0,\n                        transition: 'none',\n                      },\n                    },\n                    label: { sx: { lineHeight: 0 } },\n                  }}\n                />\n              </Box>\n            ))}\n          </RadioGroup>\n        </div>\n\n        <ButtonModalWithIcon text=\"Edit\" />\n      </Form>\n    </Formik>\n  );\n};\n\nexport default EditBoard;\n","import { useState, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n// import { Button } from '@mui/material';\nimport cactus from '../../static/images/cactus.png';\nimport { LogoComponent } from 'components/LogoComponent/LogoComponent';\nimport NewBoard from 'components/Forms/NewBoardAndEditBoard/NewBoardForm';\nimport NeedHelp from 'components/Forms/NeedHelp/NeedHelp';\nimport Modal from 'components/Modal/Modal';\nimport Icon from 'components/Icon/Icon';\nimport IconBtn from 'components/IconBtn/IconBtn';\nimport { logOutUser } from 'redux/auth/authOperations';\nimport st from './Sidebar.module.scss';\nimport {\n  deleteBoardById,\n  getAllBoards,\n  getBoardById,\n} from 'redux/board/boardOperations';\nimport EditBoard from 'components/Forms/NewBoardAndEditBoard/EditBoard';\nimport { selectBoards, selectCurrentBoardId } from 'redux/board/boardSelectors';\nimport { selectName, selectUserTheme } from 'redux/auth/authSelectors';\nimport clsx from 'clsx';\nimport ButtonDelete from 'components/Modal/ButtonDelete';\nimport { useScrollBar } from 'hooks/useScrollBar';\n\nexport const Sidebar = () => {\n  const boards = useSelector(selectBoards);\n  const theme = useSelector(selectUserTheme);\n  const isLoggedIn = useSelector(selectName);\n  const currentBoard = useSelector(selectCurrentBoardId);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [addBoardModal, setAddBoardModal] = useState(false);\n  const [needHelpModalOpen, setNeedHelpModalOpen] = useState(false);\n  const [editBoardModal, setEditBoardModal] = useState(false);\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [activeItemId, setActiveItemId] = useState(null);\n  const [boardToEdit, setBoardToEdit] = useState(null);\n  const boardWrapper = useRef(null);\n\n  useEffect(() => {\n    isLoggedIn && dispatch(getAllBoards());\n  }, [dispatch, isLoggedIn]);\n\n  useEffect(() => {\n    if (boards.length === 0) {\n      return;\n    }\n    if (!currentBoard) {\n      setActiveItemId(boards[0]._id);\n      const newTitle = boards[0].title.split(' ').join('-').toLowerCase();\n      navigate(`/home/${newTitle}`);\n    }\n  }, [boards, currentBoard, navigate]);\n\n  useEffect(() => {\n    dispatch(getBoardById(activeItemId));\n  }, [activeItemId, dispatch]);\n\n  const handleAddBoard = () => setAddBoardModal(!addBoardModal);\n\n  const handleNeedHelp = () => setNeedHelpModalOpen(!needHelpModalOpen);\n\n  const handleEditBoardModal = () => setEditBoardModal(!editBoardModal);\n\n  const handleDeleteModal = () => setDeleteModal(!deleteModal);\n\n  const handleChangeActive = (id, title) => {\n    setActiveItemId(id);\n\n    const newTitle = title.split(' ').join('-').toLowerCase();\n    navigate(`/home/${newTitle}`);\n  };\n\n  const handleEditBoard = id => {\n    setBoardToEdit(boards.filter(el => el._id === currentBoard));\n    handleEditBoardModal();\n  };\n\n  const handleDeleteBoard = id => {\n    dispatch(deleteBoardById(id));\n    dispatch(getBoardById(null));\n  };\n\n  const handleLogout = () => {\n    dispatch(logOutUser());\n  };\n\n  useScrollBar(boardWrapper, true, {scrollbars : {autoHide: \"l\"}});\n\n  return (\n    <nav>\n      <section className={st.sectionTop}>\n        <div className={st.container}>\n          <div className={st.logoWrap}>\n            <LogoComponent />\n            <p className={st.logoText}>Task Pro</p>\n          </div>\n\n          <p className={st.boardsTitle}>My boards</p>\n          <div className={st.createBoard}>\n            <p>Create a new board</p>\n            <button\n              type=\"button\"\n              className={st.buttonCreate}\n              onClick={handleAddBoard}\n            >\n              <Icon name={'icon-btn-plus'} width={20} height={20} />\n            </button>\n          </div>\n        </div>\n      </section>\n      <section className={st.sectionBoards}>\n        <div ref={boardWrapper} className='boardScroll'>\n        <ul className={st.boardsList}>\n          {boards?.map(el => {\n            const iconName = theme !== 'light' ? el.icon : `${el.icon}-white`;\n            return (\n              <li\n                key={el._id}\n                className={clsx(st.boardItem, el._id === activeItemId && st.boardItemActive)}\n                onClick={() => handleChangeActive(el._id, el.title)}\n              >\n                <div className={st.boardName}>\n                  <Icon\n                    name={iconName}\n                    width={18}\n                    height={18}\n                    className={st.boardNameIcon}\n                  />\n                  <p>{el.title}</p>\n                </div>\n                {el._id === activeItemId && (\n                  <>\n                    <div className={st.boardEditIcons}>\n                      <IconBtn\n                        name=\"icon-pencil\"\n                        width={16}\n                        height={16}\n                        secondaryClassName={clsx(\n                          theme === 'violet' && st.icons\n                        )}\n                        onClick={() => handleEditBoard(el._id)}\n                      />\n                      <IconBtn\n                        name=\"icon-trash\"\n                        width={16}\n                        height={16}\n                        secondaryClassName={clsx(\n                          theme === 'violet' && st.icons\n                        )}\n                        onClick={() => handleDeleteModal()}\n                      />\n                    </div>\n                  </>\n                )}\n              </li>\n            );\n          })}\n          </ul>\n        </div>\n      </section>\n      <section className={st.sectionHelp}>\n        <div className={st.container}>\n          <div className={st.helpWrapper}>\n            <img src={cactus} alt=\"cactus\" className={st.helpCactus} />\n            <p className={clsx(st.helpText, theme === 'violet' && st.violet)}>\n              If you need help with <br />\n              <span> TaskPro</span>, check out our support resources or reach\n              out to our customer support team.\n            </p>\n            <button className={st.helpSend} onClick={handleNeedHelp}>\n              <Icon\n                name={'icon-help-circle'}\n                width={20}\n                height={20}\n                secobdaryClassName={st.helpIcon}\n              />\n              Need help?\n            </button>\n          </div>\n        </div>\n      </section>\n      <section className={st.sectionLogOut}>\n        <div className={st.container}>\n          <button className={st.btnLogout} onClick={handleLogout}>\n            <Icon\n              name={'icon-iconlogout'}\n              width={32}\n              height={32}\n              secondaryClassName={clsx(theme === 'violet' && st.violet)}\n            />\n            Log out\n          </button>\n        </div>\n      </section>\n      {addBoardModal && (\n        <Modal title={'New board'} closeModal={handleAddBoard}>\n          <NewBoard closeModal={handleAddBoard} />\n        </Modal>\n      )}\n      {needHelpModalOpen && (\n        <Modal title=\"Need help\" closeModal={handleNeedHelp}>\n          <NeedHelp closeModal={handleNeedHelp} />\n        </Modal>\n      )}\n      {editBoardModal && (\n        <Modal title=\"Edit board\" closeModal={handleEditBoardModal}>\n          <EditBoard\n            closeModal={handleEditBoardModal}\n            boardToEdit={boardToEdit}\n          />\n        </Modal>\n      )}\n      {deleteModal && (\n        <Modal title=\"Are you sure ?\" closeModal={handleDeleteModal}>\n          <ButtonDelete\n            onClick={() => {\n              handleDeleteBoard(currentBoard);\n              handleDeleteModal();\n            }}\n          />\n        </Modal>\n      )}\n    </nav>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"welcomePageContainer\":\"WelcomePageBoard_welcomePageContainer__t0FrL\",\"welcomePage\":\"WelcomePageBoard_welcomePage__bfwyS\",\"welcomeContainerDiscription\":\"WelcomePageBoard_welcomeContainerDiscription__Z4B6z\",\"welcomeDiscription\":\"WelcomePageBoard_welcomeDiscription__BuMbu\",\"createBoardLink\":\"WelcomePageBoard_createBoardLink__KmUes\"};","import Modal from \"components/Modal/Modal\";\nimport Filters from \"../Filters/Filters\";\nimport s from './WelcomePageBoard.module.scss';\nimport NewBoard from \"components/Forms/NewBoardAndEditBoard/NewBoardForm\";\nimport { useState } from \"react\";\n\nconst WelcomePageBoard = () => {\n  const [showModal, setShowModal] = useState(false);\n\n  const handleCreateBoardClick = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <div className={s.welcomePageContainer}>\n      <div className={s.welcomePage}>\n        <Filters />\n      </div>\n      <div className={s.welcomeContainerDiscription}>\n        <p className={s.welcomeDiscription}>\n        Before starting your project, it is essential {\" \"}<span className={s.createBoardLink} onClick={handleCreateBoardClick}>to create a board</span>{\" \"} to visualize and track all the necessary tasks and milestones. This board serves as a powerful tool to organize the workflow and ensure effective collaboration among team members.\n        </p>\n      </div>\n      {showModal && (\n        <Modal title=\"New board\" closeModal={handleCloseModal}>\n          <NewBoard />\n        </Modal>\n      )}\n    </div>\n  )\n}\n\nexport default WelcomePageBoard;\n","// extracted by mini-css-extract-plugin\nexport default {\"hidden\":\"HomePage_hidden__zxuF6\",\"sideBarBackDrop\":\"HomePage_sideBarBackDrop__b987A\",\"showMobile\":\"HomePage_showMobile__g2GpM\",\"sideBar\":\"HomePage_sideBar__W15jR\",\"sideBarOpen\":\"HomePage_sideBarOpen__V9qKB HomePage_sideBar__W15jR\",\"homeWrap\":\"HomePage_homeWrap__4oaan\",\"screenWrap\":\"HomePage_screenWrap__vfEGW\"};","import { Outlet } from 'react-router-dom';\nimport { Suspense, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\nimport { Header } from 'components/Header/Header';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport { toggleSidebar } from 'redux/board/boardOperations';\nimport { getAllTasks } from 'redux/board/boardOperations';\nimport WelcomePageBoard from 'components/Bord/WelcomePageBoard/WelcomePageBoard';\nimport { selectBoards } from 'redux/board/boardSelectors';\nimport { Container } from '@mui/joy';\nimport { selectIsSidebar } from 'redux/board/boardSelectors';\nimport clsx from 'clsx';\nimport s from './HomePage.module.scss';\n\nconst HomePage = () => {\n  const dispatch = useDispatch();\n  const boards = useSelector(selectBoards);\n  const isDesktop = useMediaQuery({ minWidth: 1280 });\n  const isMobileOpen = useSelector(selectIsSidebar);\n\n  useEffect(() => {\n    dispatch(getAllTasks());\n  }, [dispatch]);\n\n  const closeMobileOnBackdrop = e => {\n    if (e.target === e.currentTarget) {\n      dispatch(toggleSidebar(false));\n    }\n  };\n\n  return (\n    <>\n      <Suspense fallback={null}>\n        <div className={s.homeWrap}>\n          {isDesktop && (\n            <div className={s.sideBar}>\n              <Sidebar />\n            </div>\n          )}\n\n          <div className={s.screenWrap}>\n            <Header />\n            {boards.length > 0 ? (\n              <Outlet />\n            ) : (\n              <Container className={s.containerWelcomeDashboard}>\n                <Outlet />\n                <WelcomePageBoard />\n              </Container>\n            )}\n          </div>\n        </div>\n\n        <div\n          className={clsx(s.sideBarBackDrop, isMobileOpen && s.showMobile)}\n          onClick={e => closeMobileOnBackdrop(e)}\n        >\n          <div className={s.sideBarOpen}>\n            <Sidebar />\n          </div>\n        </div>\n      </Suspense>\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["OutsideClicker","props","wrapperRef","useRef","isActive","setActive","ref","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","_jsx","children","SelectTheme","_ref","selectHandler","userTheme","setSelectedTheme","useState","handleClick","evtParent","currentTarget","parentElement","classList","toggle","themeCheckHandler","length","className","css","_jsxs","onClick","clsx","href","sprite","theme","innerText","toLowerCase","handleSelect","Profile","modalHandler","avatar","userAvatar","name","useSelector","selectName","src","concat","alt","schema","yup","shape","min","max","required","email","password","ProfileModal","image","setImage","showPass","setShowPass","dispatch","useDispatch","userObj","selectUser","InitalVelues","formData","FormData","append","size","alert","updateAvatar","htmlFor","id","type","accept","placeholder","onChange","evt","files","Formik","initialValues","validationSchema","onSubmit","submitHandler","values","_ref2","resetForm","updateUser","Form","InputField","value","Field","ErrorMessage","component","themes","dark","primaryBackground","secondaryBackground","headerBackground","primaryTextColor","secondaryTextColor","boardHeaders","btnBg","btnTextColor","selectHeader","selectOption","selectListBg","selectListBorder","modalBackground","btnModalIconPlus","btnModalBg","btnModalTextColor","cardBg","boardAddColumnBtn","boardAddColumnPlus","headerModalBtnAddFile","sidebarBoardActiveBg","sidebarHelpWrapperBg","sidebarButtonCreateBg","sidebarButtonIconPlus","sidebarBoardItemHover","sidebarTextColorMain","btnHoverMain","btnActiveMain","btnHoverSecondary","btnActiveSecondary","sidebarTextColorSecondary","priorityWithoutPriority","scrollHandler","scrollTrack","light","violet","root","querySelector","style","setProperty","Header","selectUserTheme","selectUserAvatar","selectAvatar","selectedTheme","isModalOpen","setIsModalOpen","switchTheme","toggleSidebar","Modal","title","closeModal","LogoComponent","st","Icon","width","height","secondaryClassName","initialsValue","icon","setIcon","bg","setBg","handleSubmit","createNewBoard","background","s","RadioGroup","orientation","variant","sx","marginBottom","border","gap","map","item","Box","position","display","justifyContent","alignItems","Radio","disableIcon","overlay","label","colors","hexagon","project","container","lightnight","loading","puzzle","star","backgroundColor","slotProps","input","action","borderRadius","transition","lineHeight","flexWrap","defaultBg","BgIcon","defaultBgWhite","flowers","leaves","mountainsAndBalloon","nature","oceanAndYacht","orangePlanet","planets","rocksAndOcean","sakura","sky","skyBalloons","starsAndShine","trailerInTheCanyon","yacht","youngMonth","outline","zIndex","ButtonModalWithIcon","text","comment","trim","hendleSubmit","autoComplete","as","boardToEdit","currentBoardId","selectCurrentBoardId","updateBoardById","data","Sidebar","boards","selectBoards","isLoggedIn","currentBoard","navigate","useNavigate","addBoardModal","setAddBoardModal","needHelpModalOpen","setNeedHelpModalOpen","editBoardModal","setEditBoardModal","deleteModal","setDeleteModal","activeItemId","setActiveItemId","setBoardToEdit","boardWrapper","getAllBoards","_id","newTitle","split","join","getBoardById","handleAddBoard","handleNeedHelp","handleEditBoardModal","handleDeleteModal","useScrollBar","scrollbars","autoHide","el","iconName","handleChangeActive","_Fragment","IconBtn","filter","secobdaryClassName","handleLogout","logOutUser","NewBoard","NeedHelp","EditBoard","ButtonDelete","deleteBoardById","WelcomePageBoard","showModal","setShowModal","Filters","handleCreateBoardClick","handleCloseModal","HomePage","isDesktop","useMediaQuery","minWidth","isMobileOpen","selectIsSidebar","getAllTasks","Suspense","fallback","Outlet","Container","e","closeMobileOnBackdrop"],"sourceRoot":""}